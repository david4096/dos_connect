---
version: '2'
services:


  webserver:
    build:
      context: .
      dockerfile: services/webserver/Dockerfile
    volumes:
      # client side certs and keys
      - "./volumes/client-certs:/client-certs"
    environment:
      - ELASTIC_URL=${ELASTIC_URL}
      - KAFKA_TOPIC=${KAFKA_DOS_TOPIC}
      - KAFKA_BOOTSTRAP=${KAFKA_BOOTSTRAP_SERVERS}
      - BACKEND=dos_connect.server.elasticsearch_backend
      - DOS_CONNECT_WEBSERVER_PORT=${DOS_CONNECT_WEBSERVER_PORT}


  # user service: monitor aws SQS queue
  aws-observer:
    build:
      context: .
      dockerfile: services/aws-observer/Dockerfile
    depends_on:
      - webserver
    volumes:
      # client side certs and keys
      - "./volumes/client-certs:/client-certs"
    network_mode: host
    environment:
      - KAFKA_TOPIC=${KAFKA_DOS_TOPIC}
      - KAFKA_BOOTSTRAP=${KAFKA_BOOTSTRAP_SERVERS}
      - SQS_QUEUE_NAME=${SQS_QUEUE_NAME}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - OBSERVER_PARMS=--verbose

  # user service: monitor aws SQS queue
  google-observer:
    build:
      context: .
      dockerfile: services/google-observer/Dockerfile
    volumes:
      # client side certs and keys
      - "./volumes/client-certs:/client-certs"
    depends_on:
      - webserver
    environment:
      - PUBSUB_QUEUE_NAME=${PUBSUB_QUEUE_NAME}


  # user service: monitor azure storage queue
  azure-observer:
    build:
      context: .
      dockerfile: services/azure-observer/Dockerfile
    volumes:
      # client side certs and keys
      - "./volumes/client-certs:/client-certs"
    depends_on:
      - webserver
    environment:
      - QUEUE_STORAGE_ACCOUNT=${QUEUE_STORAGE_ACCOUNT}
      - QUEUE_STORAGE_ACCESS_KEY=${QUEUE_STORAGE_ACCESS_KEY}
      - BLOB_STORAGE_ACCOUNT=${BLOB_STORAGE_ACCOUNT}
      - BLOB_STORAGE_ACCESS_KEY=${BLOB_STORAGE_ACCESS_KEY}
      - AZURE_QUEUE=${AZURE_QUEUE}


  # user service: monitor file system
  file-observer:
    build:
      context: .
      dockerfile: services/file-observer/Dockerfile
    volumes:
    depends_on:
      - webserver
    volumes:
      #  test directory to observe
      - "./volumes/files:/files"
      # client side certs and keys
      - "./volumes/client-certs:/client-certs"
    environment:
      - MONITOR_DIRECTORY=/files
      - OBSERVER_PARMS=--verbose
