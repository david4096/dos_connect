#!/bin/bash
echo "## checking file-source worker in kafka worker config..."

echo "## checking FileStreamSourceConnector topic..."
# create it if not exists
docker run \
  --net=host \
  --rm \
  confluentinc/cp-kafka:3.3.0 \
  kafka-topics --create --topic file-topic --partitions 1 --replication-factor 1 --if-not-exists --zookeeper localhost:32181 > /dev/null

# place some data in the files
ls -la > volumes/files/test.txt

curl --silent --fail  localhost:28082/connectors/file-source/status  > /dev/null
if [ $? -eq 0 ]; then
  echo "file-source found OK"
else
  echo "### file-source not found creating it..."
  echo "### will read directory entries of from topic 'file-topic' and write to elastic index 'file-topic' ..."
  curl --silent -X POST -H "Content-Type: application/json" --data \
  '{
  "name":"file-source",
  "config":{
    "connector.class":"org.apache.kafka.connect.file.FileStreamSourceConnector",
    "file":"/files/test.txt",
    "tasks.max":"1",
    "topic":"file-topic"
  }
  }' \
  http://localhost:28082/connectors > /dev/null
  printf '.'
  sleep 10
  curl --fail --silent  localhost:28082/connectors/file-source/status  > /dev/null
  if [ $? -eq 0 ]; then
    echo "file-source found OK"
  else
    echo "file-source could not be created FAIL"
    exit 1
  fi
fi

echo "## wait for elastic index to create ..."
until $(curl --output /dev/null --silent  --fail localhost:9200/file-topic); do
    printf '.'
    sleep 5
done
echo "elastic index created OK"

echo '## list directory elements from elasticsearch...'
curl --silent  localhost:9200/file-topic/_search | jq .
curl --silent  localhost:9200/s3-topic/_search | jq .
